%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 164 575 627
%%Creator: FreeHEP Graphics2D Driver
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D
%%For: 
%%Title: 
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
502 418 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
502.000 0.00000 l
502.000 418.000 l
0.00000 418.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
q
.501961 .501961 .501961 RG
5.00000 w
newpath
152.000 213.000 m
173.000 220.000 173.000 220.000 194.000 228.000  c
S
1.00000 w
q
[ 1.00000 0.00000 0.00000 1.00000 256.000 228.000 ] concat
0 0 30 30 rc
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [0.0 0.0 0.0 30.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.101960786 0.5019608 1.0]
         /C1 [0.74509805 0.85882354 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
11.0000 15.0000 m
11.0000 7.26801 9.20914 1.00000 7.00000 1.00000  c
4.79086 1.00000 3.00000 7.26801 3.00000 15.0000  c
3.00000 22.7320 4.79086 29.0000 7.00000 29.0000  c
9.20914 29.0000 11.0000 22.7320 11.0000 15.0000  c
f
0.00000 0.00000 0.00000 RG
newpath
7.00000 1.00000 m
4.79086 1.00000 3.00000 7.26801 3.00000 15.0000  c
3.00000 22.7320 4.79086 29.0000 7.00000 29.0000  c
S
.501961 .501961 .501961 RG
newpath
0.00000 11.0000 m
13.0000 11.0000 l
13.0000 20.0000 l
0.00000 20.0000 l
0.00000 11.0000 l
h
f
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [0.0 0.0 0.0 30.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.74509805 0.85882354 1.0]
         /C1 [0.101960786 0.5019608 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
8.00000 1.00000 m
8.00000 1.44106 l
8.00000 1.44106 l
9.72523 2.99522 11.0000 8.47656 11.0000 15.0000  c
11.0000 21.5234 9.72523 27.0048 8.00000 28.5589  c
8.00000 28.5589 l
8.00000 29.0000 l
29.0000 15.0000 l
29.0000 14.0000 l
8.00000 1.00000 l
h
f
0.00000 0.00000 0.00000 RG
newpath
8.00000 1.00000 m
8.00000 1.44106 l
8.00000 1.44106 l
9.72523 2.99522 11.0000 8.47656 11.0000 15.0000  c
11.0000 21.5234 9.72523 27.0048 8.00000 28.5589  c
8.00000 28.5589 l
8.00000 29.0000 l
29.0000 15.0000 l
29.0000 14.0000 l
8.00000 1.00000 l
h
S
newpath
7.00000 29.0000 m
9.20914 29.0000 11.0000 22.7320 11.0000 15.0000  c
11.0000 7.26801 9.20914 1.00000 7.00000 1.00000  c
S
Q
5.00000 w
newpath
244.000 228.000 m
265.000 235.000 265.000 235.000 256.000 243.000  c
S
1.00000 w
0.00000 0.00000 0.00000 RG
newpath
219.500 183.500 m
219.500 203.500 l
S
newpath
205.500 188.500 m
219.500 203.500 l
S
newpath
183.000 111.000 m
201.000 157.000 201.000 157.000 219.000 203.000  c
S
newpath
400.500 367.500 m
389.500 351.500 l
S
newpath
408.500 354.500 m
389.500 351.500 l
S
newpath
442.000 383.000 m
415.000 367.000 415.000 367.000 389.000 351.000  c
S
newpath
355.500 308.500 m
364.500 326.500 l
S
newpath
345.500 319.500 m
364.500 326.500 l
S
newpath
311.000 278.000 m
337.000 302.000 337.000 302.000 364.000 326.000  c
S
newpath
215.500 272.500 m
219.500 253.500 l
S
newpath
230.500 269.500 m
219.500 253.500 l
S
newpath
232.000 311.000 m
225.000 282.000 225.000 282.000 219.000 253.000  c
S
newpath
187.500 342.500 m
207.500 336.500 l
S
newpath
197.500 353.500 m
207.500 336.500 l
S
newpath
170.000 368.000 m
188.000 352.000 188.000 352.000 207.000 336.000  c
S
newpath
273.500 346.500 m
257.500 336.500 l
S
newpath
276.500 331.500 m
257.500 336.500 l
S
newpath
339.000 351.000 m
298.000 343.000 298.000 343.000 257.000 336.000  c
S
q
[ 1.00000 0.00000 0.00000 1.00000 286.000 208.000 ] concat
0 0 50 70 rc
.501961 .501961 .501961 RG
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [0.0 0.0 50.0 0.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [1.0 1.0 1.0]
         /C1 [0.8 0.8 0.8]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
1.00000 13.0000 m
49.0000 13.0000 l
49.0000 56.0000 l
1.00000 56.0000 l
1.00000 13.0000 l
h
f
.501961 .501961 .501961 RG
newpath
.500000 13.5000 m
.500000 56.5000 l
S
newpath
48.5000 13.5000 m
48.5000 56.5000 l
S
.933333 .933333 .933333 RG
newpath
48.0000 13.5000 m
48.0000 6.59644 37.2548 1.00000 24.0000 1.00000  c
10.7452 1.00000 3.55271E-15 6.59644 0.00000 13.5000  c
0.00000 20.4036 10.7452 26.0000 24.0000 26.0000  c
37.2548 26.0000 48.0000 20.4036 48.0000 13.5000  c
f
.501961 .501961 .501961 RG
newpath
48.0000 13.5000 m
48.0000 6.59644 37.2548 1.00000 24.0000 1.00000  c
10.7452 1.00000 3.55271E-15 6.59644 0.00000 13.5000  c
0.00000 20.4036 10.7452 26.0000 24.0000 26.0000  c
37.2548 26.0000 48.0000 20.4036 48.0000 13.5000  c
S
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [0.0 0.0 50.0 0.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [1.0 1.0 1.0]
         /C1 [0.8 0.8 0.8]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
0.00000 55.5000 m
0.00000 62.4036 10.7452 68.0000 24.0000 68.0000  c
37.2548 68.0000 48.0000 62.4036 48.0000 55.5000  c
f
.501961 .501961 .501961 RG
newpath
0.00000 55.5000 m
0.00000 62.4036 10.7452 68.0000 24.0000 68.0000  c
37.2548 68.0000 48.0000 62.4036 48.0000 55.5000  c
S
0.00000 0.00000 0.00000 RG
newpath
24.7344 37.0469 m
23.8698 37.0469 23.1849 37.3672 22.6797 38.0078  c
22.1745 38.6484 21.9219 39.5260 21.9219 40.6406  c
21.9219 41.7344 22.1745 42.6016 22.6797 43.2422  c
23.1849 43.8828 23.8698 44.2031 24.7344 44.2031  c
25.5885 44.2031 26.2682 43.8828 26.7734 43.2422  c
27.2786 42.6016 27.5312 41.7344 27.5312 40.6406  c
27.5312 39.5260 27.2786 38.6484 26.7734 38.0078  c
26.2682 37.3672 25.5885 37.0469 24.7344 37.0469  c
h
26.3906 44.8438 m
27.9531 46.5469 l
26.5156 46.5469 l
25.2188 45.1406 l
25.0938 45.1510 24.9974 45.1589 24.9297 45.1641  c
24.8620 45.1693 24.7969 45.1719 24.7344 45.1719  c
23.5052 45.1719 22.5208 44.7604 21.7812 43.9375  c
21.0417 43.1146 20.6719 42.0156 20.6719 40.6406  c
20.6719 39.2552 21.0417 38.1510 21.7812 37.3281  c
22.5208 36.5052 23.5052 36.0938 24.7344 36.0938  c
25.9531 36.0938 26.9297 36.5052 27.6641 37.3281  c
28.3984 38.1510 28.7656 39.2552 28.7656 40.6406  c
28.7656 41.6510 28.5625 42.5182 28.1562 43.2422  c
27.7500 43.9661 27.1615 44.5000 26.3906 44.8438  c
h
f
Q
q
[ 1.00000 0.00000 0.00000 1.00000 158.000 61.0000 ] concat
0 0 50 50 rc
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [0.0 0.0 0.0 50.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [1.0 0.99607843 0.7647059]
         /C1 [1.0 0.99215686 0.34117648]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
49.0000 25.0000 m
49.0000 11.7452 38.2548 1.00000 25.0000 1.00000  c
11.7452 1.00000 1.00000 11.7452 1.00000 25.0000  c
1.00000 38.2548 11.7452 49.0000 25.0000 49.0000  c
38.2548 49.0000 49.0000 38.2548 49.0000 25.0000  c
f
.501961 .501961 .501961 RG
newpath
49.0000 25.0000 m
49.0000 11.7452 38.2548 1.00000 25.0000 1.00000  c
11.7452 1.00000 1.00000 11.7452 1.00000 25.0000  c
1.00000 38.2548 11.7452 49.0000 25.0000 49.0000  c
38.2548 49.0000 49.0000 38.2548 49.0000 25.0000  c
S
0.00000 0.00000 0.00000 RG
newpath
26.9375 24.4375 m
26.8125 24.3750 26.6797 24.3255 26.5391 24.2891  c
26.3984 24.2526 26.2396 24.2344 26.0625 24.2344  c
25.4583 24.2344 24.9922 24.4323 24.6641 24.8281  c
24.3359 25.2240 24.1719 25.7969 24.1719 26.5469  c
24.1719 30.0000 l
23.0938 30.0000 l
23.0938 23.4375 l
24.1719 23.4375 l
24.1719 24.4531 l
24.4010 24.0573 24.6979 23.7630 25.0625 23.5703  c
25.4271 23.3776 25.8698 23.2812 26.3906 23.2812  c
26.4635 23.2812 26.5443 23.2865 26.6328 23.2969  c
26.7214 23.3073 26.8177 23.3229 26.9219 23.3438  c
26.9375 24.4375 l
h
f
Q
q
[ 1.00000 0.00000 0.00000 1.00000 120.000 343.000 ] concat
0 0 50 50 rc
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [0.0 0.0 0.0 50.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [1.0 0.99607843 0.7647059]
         /C1 [1.0 0.99215686 0.34117648]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
49.0000 25.0000 m
49.0000 11.7452 38.2548 1.00000 25.0000 1.00000  c
11.7452 1.00000 1.00000 11.7452 1.00000 25.0000  c
1.00000 38.2548 11.7452 49.0000 25.0000 49.0000  c
38.2548 49.0000 49.0000 38.2548 49.0000 25.0000  c
f
.501961 .501961 .501961 RG
newpath
49.0000 25.0000 m
49.0000 11.7452 38.2548 1.00000 25.0000 1.00000  c
11.7452 1.00000 1.00000 11.7452 1.00000 25.0000  c
1.00000 38.2548 11.7452 49.0000 25.0000 49.0000  c
38.2548 49.0000 49.0000 38.2548 49.0000 25.0000  c
S
0.00000 0.00000 0.00000 RG
newpath
17.0469 21.2500 m
18.2344 21.2500 l
18.2344 26.5625 l
18.2344 27.5000 18.4036 28.1745 18.7422 28.5859  c
19.0807 28.9974 19.6302 29.2031 20.3906 29.2031  c
21.1510 29.2031 21.7005 28.9974 22.0391 28.5859  c
22.3776 28.1745 22.5469 27.5000 22.5469 26.5625  c
22.5469 21.2500 l
23.7344 21.2500 l
23.7344 26.7188 l
23.7344 27.8542 23.4531 28.7135 22.8906 29.2969  c
22.3281 29.8802 21.4948 30.1719 20.3906 30.1719  c
19.2865 30.1719 18.4531 29.8802 17.8906 29.2969  c
17.3281 28.7135 17.0469 27.8542 17.0469 26.7188  c
17.0469 21.2500 l
h
27.1406 25.8281 m
27.1406 29.0312 l
29.0469 29.0312 l
29.6823 29.0312 30.1536 28.8984 30.4609 28.6328  c
30.7682 28.3672 30.9219 27.9635 30.9219 27.4219  c
30.9219 26.8698 30.7682 26.4661 30.4609 26.2109  c
30.1536 25.9557 29.6823 25.8281 29.0469 25.8281  c
27.1406 25.8281 l
h
27.1406 22.2188 m
27.1406 24.8594 l
28.8906 24.8594 l
29.4740 24.8594 29.9062 24.7500 30.1875 24.5312  c
30.4688 24.3125 30.6094 23.9844 30.6094 23.5469  c
30.6094 23.0990 30.4688 22.7656 30.1875 22.5469  c
29.9062 22.3281 29.4740 22.2188 28.8906 22.2188  c
27.1406 22.2188 l
h
25.9531 21.2500 m
28.9844 21.2500 l
29.8906 21.2500 30.5859 21.4375 31.0703 21.8125  c
31.5547 22.1875 31.7969 22.7188 31.7969 23.4062  c
31.7969 23.9479 31.6719 24.3776 31.4219 24.6953  c
31.1719 25.0130 30.8073 25.2083 30.3281 25.2812  c
30.9115 25.4062 31.3646 25.6667 31.6875 26.0625  c
32.0104 26.4583 32.1719 26.9531 32.1719 27.5469  c
32.1719 28.3281 31.9062 28.9323 31.3750 29.3594  c
30.8438 29.7865 30.0833 30.0000 29.0938 30.0000  c
25.9531 30.0000 l
25.9531 21.2500 l
h
f
Q
q
[ 1.00000 0.00000 0.00000 1.00000 339.000 326.000 ] concat
0 0 50 50 rc
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [0.0 0.0 0.0 50.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [1.0 0.99607843 0.7647059]
         /C1 [1.0 0.99215686 0.34117648]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
49.0000 25.0000 m
49.0000 11.7452 38.2548 1.00000 25.0000 1.00000  c
11.7452 1.00000 1.00000 11.7452 1.00000 25.0000  c
1.00000 38.2548 11.7452 49.0000 25.0000 49.0000  c
38.2548 49.0000 49.0000 38.2548 49.0000 25.0000  c
f
.501961 .501961 .501961 RG
newpath
49.0000 25.0000 m
49.0000 11.7452 38.2548 1.00000 25.0000 1.00000  c
11.7452 1.00000 1.00000 11.7452 1.00000 25.0000  c
1.00000 38.2548 11.7452 49.0000 25.0000 49.0000  c
38.2548 49.0000 49.0000 38.2548 49.0000 25.0000  c
S
0.00000 0.00000 0.00000 RG
newpath
17.0469 21.2500 m
18.2344 21.2500 l
18.2344 26.5625 l
18.2344 27.5000 18.4036 28.1745 18.7422 28.5859  c
19.0807 28.9974 19.6302 29.2031 20.3906 29.2031  c
21.1510 29.2031 21.7005 28.9974 22.0391 28.5859  c
22.3776 28.1745 22.5469 27.5000 22.5469 26.5625  c
22.5469 21.2500 l
23.7344 21.2500 l
23.7344 26.7188 l
23.7344 27.8542 23.4531 28.7135 22.8906 29.2969  c
22.3281 29.8802 21.4948 30.1719 20.3906 30.1719  c
19.2865 30.1719 18.4531 29.8802 17.8906 29.2969  c
17.3281 28.7135 17.0469 27.8542 17.0469 26.7188  c
17.0469 21.2500 l
h
32.5156 21.9219 m
32.5156 23.1719 l
32.1094 22.7969 31.6823 22.5182 31.2344 22.3359  c
30.7865 22.1536 30.3073 22.0625 29.7969 22.0625  c
28.7969 22.0625 28.0312 22.3698 27.5000 22.9844  c
26.9688 23.5990 26.7031 24.4844 26.7031 25.6406  c
26.7031 26.7865 26.9688 27.6667 27.5000 28.2812  c
28.0312 28.8958 28.7969 29.2031 29.7969 29.2031  c
30.3073 29.2031 30.7865 29.1094 31.2344 28.9219  c
31.6823 28.7344 32.1094 28.4583 32.5156 28.0938  c
32.5156 29.3281 l
32.0990 29.6094 31.6589 29.8203 31.1953 29.9609  c
30.7318 30.1016 30.2448 30.1719 29.7344 30.1719  c
28.4010 30.1719 27.3542 29.7656 26.5938 28.9531  c
25.8333 28.1406 25.4531 27.0365 25.4531 25.6406  c
25.4531 24.2344 25.8333 23.1250 26.5938 22.3125  c
27.3542 21.5000 28.4010 21.0938 29.7344 21.0938  c
30.2552 21.0938 30.7474 21.1641 31.2109 21.3047  c
31.6745 21.4453 32.1094 21.6510 32.5156 21.9219  c
h
f
Q
q
[ 1.00000 0.00000 0.00000 1.00000 442.000 358.000 ] concat
0 0 50 50 rc
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [0.0 0.0 0.0 50.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [1.0 0.99607843 0.7647059]
         /C1 [1.0 0.99215686 0.34117648]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
49.0000 25.0000 m
49.0000 11.7452 38.2548 1.00000 25.0000 1.00000  c
11.7452 1.00000 1.00000 11.7452 1.00000 25.0000  c
1.00000 38.2548 11.7452 49.0000 25.0000 49.0000  c
38.2548 49.0000 49.0000 38.2548 49.0000 25.0000  c
f
.501961 .501961 .501961 RG
newpath
49.0000 25.0000 m
49.0000 11.7452 38.2548 1.00000 25.0000 1.00000  c
11.7452 1.00000 1.00000 11.7452 1.00000 25.0000  c
1.00000 38.2548 11.7452 49.0000 25.0000 49.0000  c
38.2548 49.0000 49.0000 38.2548 49.0000 25.0000  c
S
0.00000 0.00000 0.00000 RG
newpath
28.7344 21.9219 m
28.7344 23.1719 l
28.3281 22.7969 27.9010 22.5182 27.4531 22.3359  c
27.0052 22.1536 26.5260 22.0625 26.0156 22.0625  c
25.0156 22.0625 24.2500 22.3698 23.7188 22.9844  c
23.1875 23.5990 22.9219 24.4844 22.9219 25.6406  c
22.9219 26.7865 23.1875 27.6667 23.7188 28.2812  c
24.2500 28.8958 25.0156 29.2031 26.0156 29.2031  c
26.5260 29.2031 27.0052 29.1094 27.4531 28.9219  c
27.9010 28.7344 28.3281 28.4583 28.7344 28.0938  c
28.7344 29.3281 l
28.3177 29.6094 27.8776 29.8203 27.4141 29.9609  c
26.9505 30.1016 26.4635 30.1719 25.9531 30.1719  c
24.6198 30.1719 23.5729 29.7656 22.8125 28.9531  c
22.0521 28.1406 21.6719 27.0365 21.6719 25.6406  c
21.6719 24.2344 22.0521 23.1250 22.8125 22.3125  c
23.5729 21.5000 24.6198 21.0938 25.9531 21.0938  c
26.4740 21.0938 26.9661 21.1641 27.4297 21.3047  c
27.8932 21.4453 28.3281 21.6510 28.7344 21.9219  c
h
f
Q
q
[ 1.00000 0.00000 0.00000 1.00000 207.000 311.000 ] concat
0 0 50 50 rc
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [0.0 0.0 0.0 50.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [1.0 0.99607843 0.7647059]
         /C1 [1.0 0.99215686 0.34117648]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
49.0000 25.0000 m
49.0000 11.7452 38.2548 1.00000 25.0000 1.00000  c
11.7452 1.00000 1.00000 11.7452 1.00000 25.0000  c
1.00000 38.2548 11.7452 49.0000 25.0000 49.0000  c
38.2548 49.0000 49.0000 38.2548 49.0000 25.0000  c
f
.501961 .501961 .501961 RG
newpath
49.0000 25.0000 m
49.0000 11.7452 38.2548 1.00000 25.0000 1.00000  c
11.7452 1.00000 1.00000 11.7452 1.00000 25.0000  c
1.00000 38.2548 11.7452 49.0000 25.0000 49.0000  c
38.2548 49.0000 49.0000 38.2548 49.0000 25.0000  c
S
0.00000 0.00000 0.00000 RG
newpath
17.0469 21.2500 m
18.2344 21.2500 l
18.2344 26.5625 l
18.2344 27.5000 18.4036 28.1745 18.7422 28.5859  c
19.0807 28.9974 19.6302 29.2031 20.3906 29.2031  c
21.1510 29.2031 21.7005 28.9974 22.0391 28.5859  c
22.3776 28.1745 22.5469 27.5000 22.5469 26.5625  c
22.5469 21.2500 l
23.7344 21.2500 l
23.7344 26.7188 l
23.7344 27.8542 23.4531 28.7135 22.8906 29.2969  c
22.3281 29.8802 21.4948 30.1719 20.3906 30.1719  c
19.2865 30.1719 18.4531 29.8802 17.8906 29.2969  c
17.3281 28.7135 17.0469 27.8542 17.0469 26.7188  c
17.0469 21.2500 l
h
30.1094 25.8906 m
30.3594 25.9844 30.6042 26.1719 30.8438 26.4531  c
31.0833 26.7344 31.3281 27.1198 31.5781 27.6094  c
32.7812 30.0000 l
31.5000 30.0000 l
30.3906 27.7500 l
30.0990 27.1667 29.8177 26.7786 29.5469 26.5859  c
29.2760 26.3932 28.9062 26.2969 28.4375 26.2969  c
27.1406 26.2969 l
27.1406 30.0000 l
25.9531 30.0000 l
25.9531 21.2500 l
28.6250 21.2500 l
29.6250 21.2500 30.3724 21.4583 30.8672 21.8750  c
31.3620 22.2917 31.6094 22.9219 31.6094 23.7656  c
31.6094 24.3177 31.4818 24.7760 31.2266 25.1406  c
30.9714 25.5052 30.5990 25.7552 30.1094 25.8906  c
h
27.1406 22.2188 m
27.1406 25.3281 l
28.6250 25.3281 l
29.1979 25.3281 29.6302 25.1953 29.9219 24.9297  c
30.2135 24.6641 30.3594 24.2760 30.3594 23.7656  c
30.3594 23.2552 30.2135 22.8698 29.9219 22.6094  c
29.6302 22.3490 29.1979 22.2188 28.6250 22.2188  c
27.1406 22.2188 l
h
f
Q
q
[ 1.00000 0.00000 0.00000 1.00000 102.000 188.000 ] concat
0 0 50 50 rc
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [0.0 0.0 0.0 50.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [1.0 0.99607843 0.7647059]
         /C1 [1.0 0.99215686 0.34117648]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
49.0000 25.0000 m
49.0000 11.7452 38.2548 1.00000 25.0000 1.00000  c
11.7452 1.00000 1.00000 11.7452 1.00000 25.0000  c
1.00000 38.2548 11.7452 49.0000 25.0000 49.0000  c
38.2548 49.0000 49.0000 38.2548 49.0000 25.0000  c
f
.501961 .501961 .501961 RG
newpath
49.0000 25.0000 m
49.0000 11.7452 38.2548 1.00000 25.0000 1.00000  c
11.7452 1.00000 1.00000 11.7452 1.00000 25.0000  c
1.00000 38.2548 11.7452 49.0000 25.0000 49.0000  c
38.2548 49.0000 49.0000 38.2548 49.0000 25.0000  c
S
q
[ 50.0000 0.00000 0.00000 50.0000 0.00000 0.00000 ] concat
<<
/ImageType 1
/Width 50  /Height 50
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [50 0 0 50 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/&=X\,q'L'N1)%2j=$mcLJiP??D?BBsO&S6tN77rfc:a/7uVXWN_"&G'bKEl!2;@"EiR>5jur8$1H
n$E&m]A9B3p\1>NZbC@-Hi7`^IiYq#JH>u^'I`a#nG2m*G'<TPp%;D92E*RAH?q>%17Xo+/M&G>6:-Qe
MWX*b)<mKSQf[>j!<E3j7Rekm$4=&CZ&Oa&bKJ(Yk3)^A4[2/<-%X"Q`1s(P$N9AZXhDF(bfiaQTt7fR
$2fp^S"#o:n8KgB!b5a#V55Ie9//.UF?0sT++JcicY2S@r7o91793@[I3RG#gB'En-TsV`KatW)]Ao,Y
>SS%k1MQu7G':pHa*`2%7>4^FQ'IW.TqUD^]Y$@09B[&l!s:a1a2]Ph41hVsD/=$iWMp3C"t0>!kic]?
N^aSLEH#k6*#q('4B-fslc-pK9$YAnKRBi&XhD-M7<_a8>0<gI>$=Zp9Sd1b?=%r)HgU4f\]F=2EUlL.
%hF5fjQ,CVgKUr(hVOijQPYL8MMe-1_@^jGo(McHhC-2V(DhOLIO*Rsf(SP"Y+qaZ?n!HNLSB;s\$<1]
OY\dL;IQo<ZQr"A=*K(@SK^Voq"TZs,a=OX'N7q/^*VhL!Ha$HJH6Bg;Gn\Re(rhS@]HH.A1\Bu?!UT;
>Dm8'@rl9q8!]0i-&55U`6-4pU3Ud"_WV>oSt6_06=2FpF)uC7n)WOT'p+ZEKE)tp]-ZD3qO1Y;*71KW
:JZrAQBi:_['[39NZ1=c!C9";5B8%k;!:`!qUF"/@:<VA>fF\$Z"or&SdOVLX/da?"M7!%<u3#PeR<3-
._^%HF(<h?A/6EtD8f6T$47+G;<e;MlKZGm_"Gho\A,e>@"BhE4$QmQJqJ]l_VgRa(`aVCb&_WFZ>-SH
YQ"P#ipHo;S!t9I/M8ZMcKW<\]"1LE4Ztr>CBJWR@"ql#o_%l3OC^$&&U4k\UnsnZL#Lt"*N$6PPp2%]
;.(h01_cQl_NTKBo^n5jM?6[]=BNYlLPCO3_-ETVZ*h!IiX5MVpd"Z>kihLf+Z[0H]B\jS'^H+(OHl*-
Z*U["iL]/pBNrPU>cE4>+$i:_"C;sG%=@l.2[Ts%'GjYA9asT7)&_C_"`IgX@6!]#c;"cKoIR!SRH2Bs
%hI,@!GcIdU]U?'pDO:L`Ui[W?Qh3];^tlX$mO@m&`=G?1<-'Qlg$(X^%%>?KEN(%\[hOQ_?,WA!\?I,
co#h!itBj4a(C,JPtjh0@J=9@6u[*a+Pn[Vn,oS^Tg<X:![)"OrV]h(2(D!`7V^^U=b'Y[ZEf'.'8s#g
UEeV*HUW@24ag&dj5JsjYHJJeNXZ>jZE1-DEcMf%kF_QITKn&0"Ub56quTn5Q%o~>
Q
Q
q
[ 1.00000 0.00000 0.00000 1.00000 194.000 203.000 ] concat
0 0 50 50 rc
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [0.0 0.0 0.0 50.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [1.0 0.99607843 0.7647059]
         /C1 [1.0 0.99215686 0.34117648]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
0.00000 0.00000 m
50.0000 0.00000 l
50.0000 50.0000 l
0.00000 50.0000 l
0.00000 0.00000 l
h
f
.501961 .501961 .501961 RG
newpath
.500000 .500000 m
49.5000 .500000 l
49.5000 49.5000 l
.500000 49.5000 l
.500000 .500000 l
h
S
0.00000 0.00000 0.00000 RG
newpath
20.1719 21.2500 m
21.3594 21.2500 l
21.3594 29.3906 l
21.3594 30.4427 21.1589 31.2083 20.7578 31.6875  c
20.3568 32.1667 19.7135 32.4062 18.8281 32.4062  c
18.3750 32.4062 l
18.3750 31.4062 l
18.7500 31.4062 l
19.2708 31.4062 19.6380 31.2604 19.8516 30.9688  c
20.0651 30.6771 20.1719 30.1510 20.1719 29.3906  c
20.1719 21.2500 l
h
24.0156 29.0000 m
25.9531 29.0000 l
25.9531 22.3281 l
23.8438 22.7500 l
23.8438 21.6719 l
25.9375 21.2500 l
27.1250 21.2500 l
27.1250 29.0000 l
29.0625 29.0000 l
29.0625 30.0000 l
24.0156 30.0000 l
24.0156 29.0000 l
h
f
Q
Q
end end restore showpage

%%Trailer
%%EOF
